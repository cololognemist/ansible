---
- name: VPC Creation
  hosts: localhost
  gather_facts: false
  tasks:
    - name: creating vpc
      amazon.aws.ec2_vpc_net:
        region: ap-northeast-2
        name: viki-vpc01
        cidr_block: 10.0.0.0/20
      #  ipv6_cidr: false
        tenancy: default
        dns_support: true
        dns_hostnames: true
       #dhcp_opts_id: dopt-051a8asdas8 # DHCP options set id
        tags:
          createdby: ansible
          type: vpc
          name: viki-vpc01
        state: present
      register: vpc_info

    - name: creating subnet for vpc
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc_info.vpc.id }}"
        cidr: 10.0.1.0/24
        region: ap-northeast-2
        az: ap-northeast-2a
        map_public: true
        tags:
          createby: ansible
          type: subnet
          name: viki-vpc01-pub-subnet1
        state: present
      register: sub1

    - name: Creating igw and asigning to vpc
      amazon.aws.ec2_vpc_igw:
        region: ap-northeast-2
        vpc_id: "{{ vpc_info.vpc.id }}"
      # force_attach: true 
      # internet_gateway_id: igw-123 # when managing igw
      # detach_vpc: true
        state: present
        tags:
          createdby: ansible
          name: igw-viki-vpc01
          type: igw
      register: igw

    - name: vpc nacl
      amazon.aws.ec2_vpc_nacl:
        name: nacl-viki-vpc01
      # nacl_id: abcde #specify only one name or nacl id
        region: ap-northeast-2
        vpc_id: "{{vpc_info.vpc.id }}"
        subnets: # list of subets to associate with
          - "{{ sub1.subnet.id }}"

        ingress:
          - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]
          - [101, 'all', 'allow', '0.0.0.0/0', null, null, -1, -1]
         #-[ruleno, 'protocol', 'allow/deny', 'cidr', icmpType, icmpCode, fromPort, toPort]

        egress:
          - [100, 'tcp', 'allow', '0.0.0.0/0', null, null, 80, 80]
          - [101, 'all', 'allow', '0.0.0.0/0', null, null, -1, -1]

        state: present
        tags:
          createdby: ansible
          type: nacl
      register: nacl1

    - name: vpc route table
      amazon.aws.ec2_vpc_route_table:
      # route_table_id: abcd # use if lookup = id
        region: ap-northeast-2
        vpc_id: "{{vpc_info.vpc.id }}"
        subnets:
          - "{{ sub1.subnet.id }}"
        routes:
           - dest: 0.0.0.0/0
             gateway_id: "{{ igw.gateway_id }}"
        state: present
        tags:
          createdby: ansible
          name: rt1

 #  - name: deleting subnet
 #    amazon.aws.ec2_vpc_subnet:
 #      vpc_id: "{{ vpc_info.vpc.id }}"
 #      cidr: 10.0.1.0/24
 #      region: ap-northeast-2
 #      state: absent

 #  - name: deleting vpc
 #    amazon.aws.ec2_vpc_net:
 #      vpc_id: "{{ vpc_info.vpc.id }}"
 #      region: ap-northeast-2
 #      state: absent
